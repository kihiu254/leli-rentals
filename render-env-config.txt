# Render Environment Configuration
# Copy this to .env.local and fill in your actual values

# Firebase Configuration (Required)
NEXT_PUBLIC_FIREBASE_API_KEY=your_firebase_api_key_here
NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=your_firebase_auth_domain_here
NEXT_PUBLIC_FIREBASE_PROJECT_ID=your_firebase_project_id_here
NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=your_firebase_storage_bucket_here
NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=your_firebase_messaging_sender_id_here
NEXT_PUBLIC_FIREBASE_APP_ID=your_firebase_app_id_here

# Render Database Configuration (Optional - for future use)
# RENDER_DATABASE_URL=postgresql://username:password@hostname:port/database

# Render Services Configuration (Optional - for future use)
# RENDER_API_URL=https://your-app.onrender.com
# RENDER_SERVICE_URL=https://your-service.onrender.com

# Instructions:
# 1. Create a Firebase project at https://console.firebase.google.com/
# 2. Enable Authentication (Email/Password and Google)
# 3. Enable Firestore Database
# 4. Enable Storage
# 5. Get your Firebase config from Project Settings > General > Your apps
# 6. Copy the values above to your .env.local file
# 7. For Render deployment, add these same variables to your Render dashboard

# Render Setup Steps:
# 1. Create account at https://render.com/
# 2. Create a new Web Service
# 3. Connect your GitHub repository
# 4. Set build command: npm install && npm run build
# 5. Set start command: npm start
# 6. Add environment variables in Render dashboard
# 7. Deploy your application

# Optional: Render PostgreSQL Database
# 1. Create a PostgreSQL service in Render
# 2. Get the connection string
# 3. Add RENDER_DATABASE_URL to your environment variables
# 4. Use this for future database needs instead of external services
